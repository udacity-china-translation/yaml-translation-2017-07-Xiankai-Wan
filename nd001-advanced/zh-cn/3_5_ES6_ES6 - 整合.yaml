id: 374354
key: 2baa2512-b298-4796-aa5a-9135d82ff298
locale: zh-cn
version: 1.0.0
title: ES6 - 整合
semantic_type: Lesson
updated_at: 'Wed Sep 20 2017 09:09:55 GMT+0000 (UTC)'
is_public: true
image:
  url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/August/59a3a573_3-18-writing-developer-friendly-apis-copy-22x/3-18-writing-developer-friendly-apis-copy-22x.jpg'
  width: 592
  height: 640
video: null
summary: 经过这么多的改进后，并非所有浏览器都能支持这一新版 JavaScript。在这节课，你将学习如何使用 polyfill 并将 ES6 JavaScript 代码转译为 ES5。
lesson_type: Classroom
duration: 90
is_project_lesson: false
career_portal_experience_levels: null
_concepts_ids:
  - 374336
  - 374339
  - 374340
  - 374342
  - 374341
  - 374345
  - 374343
  - 374346
  - 374344
  - 374347
  - 374348
  - 374349
  - 374351
  - 374350
_project_id: null
concepts:
  - id: 374336
    key: 71e01842-913a-4166-ac72-26d14bff16e4
    locale: zh-cn
    version: 1.0.0
    title: 网络在不断发展
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:31 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374259
    atoms:
      - id: 374259
        key: 25c0db9c-c6c4-45d0-9a2d-ef598ceeb78b
        locale: zh-cn
        version: 1.0.0
        title: 网络在不断发展
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:44:31 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '43145'
          youtube_id: ue0FpyoZhts
          subtitles:
            - url: 'https://s3.amazonaws.com/video.udacity-data.com/topher/2016/December/583f7cae_01-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cae_01-intro/01-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cae_01-intro/01-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cae_01-intro/01-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cae_01-intro/01-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cae_01-intro/hls/playlist.m3u8'
  - id: 374339
    key: 17ce250d-ac1d-43de-b994-0c83978b30b8
    locale: zh-cn
    version: 1.0.0
    title: 新旧浏览器
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:33 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374260
      - 374261
      - 374262
      - 374263
      - 374264
    atoms:
      - id: 374260
        key: 3bf5af3c-9163-410e-a714-0e781f96bcc2
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:44:32 GMT+0000 (UTC)'
        is_public: true
        text: |-
          ## 代码不能在旧浏览器上运行

          我们在这门课程中学习的代码在旧浏览器中不受支持。在发布 ES6 之前开发的旧浏览器支持的是当时版本的 JavaScript（即 ES5.1）。如果你尝试在旧浏览器中运行任何 ES6 代码，将无法运行。
        instructor_notes: ''
        resources: null
      - id: 374261
        key: 8c5caed3-65bc-4df1-84f0-44830815b043
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Mon Sep 11 2017 16:44:32 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/59012473_ud356-l4-es6-code-safari-error/ud356-l4-es6-code-safari-error.png'
        width: 784
        height: 526
        alt: null
        caption: _运行了箭头函数，并导致 Safari 9 出现语法错误。_
        resources: null
        instructor_notes: null
      - id: 374262
        key: 3b611cb3-ee49-4ad0-a96d-e7713e496212
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:44:32 GMT+0000 (UTC)'
        is_public: true
        text: |-
          在发布 ES6 之前开发的旧浏览器不支持运行这些代码很正常，但是有些在 ES6 之后发布的浏览器也尚不支持新的 JavaScript 语法和功能。

          尝试在代码中使用一个箭头函数，并在 IE 11 中打开，将不可行。控制台中会出现错误，提示不能识别该语法。
        instructor_notes: ''
        resources: null
      - id: 374263
        key: 11274705-3af4-47de-a776-1208f581da97
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Mon Sep 11 2017 16:44:33 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/59012490_ud356-l4-es6-code-ie-error/ud356-l4-es6-code-ie-error.png'
        width: 1183
        height: 658
        alt: null
        caption: _运行了箭头函数，并导致 IE 11 出现语法错误。_
        resources: null
        instructor_notes: null
      - id: 374264
        key: bc0289f9-a05c-4d70-a309-a2766a40b0ed
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Wed Sep 20 2017 07:57:22 GMT+0000 (UTC)'
        is_public: true
        text: |-
          我们很多人没有太考虑浏览器和它的功能，直到代码无法运行！但实际上浏览器创建者日子并不好过。想想 HTML CSS 和 JavaScript，这些语言很灵活，一直在改善。浏览器创建者需要跟上这些变化。

          **它们如何知道这些变化呢？**

          它们会学习（或实际上会构建）语言规范！

          就像 [World Wide Web Consortium (W3C)](https://www.w3.org/) 是一个 HTML、CSS 和 SVG 等的标准制定机构，[Ecma International](https://www.ecma-international.org/) 是一个行业协会，专门用于制定和监管 JavaScript 和 JSON 等标准。你可以在[此处](http://www.ecma-international.org/ecma-262/6.0/index.html)找到 ES6 的规范。

          ### 其他信息

          Ecma International 是一个很重要的行业社区，强烈推荐详细了解该机构：

          * [Ecma 国际组织](https://en.wikipedia.org/wiki/Ecma_International)(Ecma International）
          * [什么是 Ecma](http://www.ecma-international.org/memento/index.html)(What is Ecma)

          > **注意：**我们在这门课程中学习的代码在旧浏览器中不受支持。在发布 ES6 之前开发的旧浏览器支持的是当时版本的 JavaScript（即 ES5.1）。如果你尝试在旧浏览器中运行任何 ES6 代码，将无法运行。
        instructor_notes: ''
        resources: null
  - id: 374340
    key: 92284c1e-2cda-438d-837e-ae3571a60e65
    locale: zh-cn
    version: 1.0.0
    title: ES6 规范
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:34 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374265
      - 374266
    atoms:
      - id: 374265
        key: 8db40268-7a8f-43b5-b2f9-de97e0616426
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:44:34 GMT+0000 (UTC)'
        is_public: true
        text: |
          ## ES6 规范

          可以在[此处](http://www.ecma-international.org/ecma-262/6.0/index.html)找到 ES6 的规范。该规范列出了该语言正常运行需要遵守的规则和指南。它没有详细描述浏览器创建者如何实现相关功能，但是给出了该语言如何正常运行的逐步说明。在制作这门课程时，我们随时都在参考该官方规范。

          因此，说实话，有时候难以理解该规范的一些晦涩措辞。但是，如果你对 ES6 有疑问，建议查阅 [Mozilla Developer Network](https://developer.mozilla.org) 提供的主题内容，然后看看该规范的实际内容。
        instructor_notes: ''
        resources: null
      - id: 374266
        key: 84f8ce97-c47d-4afc-8221-652ccaef21b3
        locale: zh-cn
        version: 1.0.0
        title: ES6 规范测验
        semantic_type: RadioQuizAtom
        updated_at: 'Mon Sep 11 2017 16:44:34 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: '请参阅 [ES6 规范](http://www.ecma-international.org/ecma-262/6.0/index.html)。该规范的哪部分讲解的是箭头函数？'
          correct_feedback: '关于箭头函数的部分是第 [14.2](http://www.ecma-international.org/ecma-262/6.0/index.html#sec-arrow-function-definitions) 部分'
          video_feedback: null
          default_feedback: 不太正确。请继续查找！
          answers:
            - id: a1484684892890
              text: 第 6 部分
              is_correct: false
              incorrect_feedback: null
            - id: a1484684905089
              text: 第 10.3.2 部分
              is_correct: false
              incorrect_feedback: null
            - id: a1484684909276
              text: 第 14.2 部分
              is_correct: true
              incorrect_feedback: null
            - id: a1484684913573
              text: 第 18.3.29 部分
              is_correct: false
              incorrect_feedback: null
  - id: 374342
    key: b3c593b2-e4f6-46d9-9551-e0e56af6a36f
    locale: zh-cn
    version: 1.0.0
    title: 支持的功能
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:36 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374267
      - 374268
      - 374270
    atoms:
      - id: 374267
        key: 8b6c6cc1-4661-45dd-a398-4ced2ab95396
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:44:35 GMT+0000 (UTC)'
        is_public: true
        text: |
          ## 如何知道浏览器支持哪些功能？

          因为每年都会出现新的语言规范，浏览器每隔一个月就更新一次，要知道浏览器都支持哪些语言很困难。每个浏览器构建者（Safari 除外）都提供了一个网站，用来记录浏览器的开发状态。请访问以下每个浏览器的平台功能更新网址：

          * Google Chrome - https://www.chromestatus.com/features#ES6
          * Microsoft Edge - https://developer.microsoft.com/en-us/microsoft-edge/platform/status/?q=ES6
          * Mozilla Firefox - https://platform-status.mozilla.org/

          > **注意：**Safari 没有自己的平台状态网站。实际上，Safari 由开源浏览器引擎 Webkit 提供支持。可以在[此处](https://webkit.org/status/)找到 Webkit 功能的状态。

          要查看的信息很多。如果你想大致了解下对所有 JavaScript 代码的功能支持，请参阅由 [@kangax](https://twitter.com/kangax) 创建的 ECMAScript 兼容性表格。

          * http://kangax.github.io/compat-table/es6/
        instructor_notes: ''
        resources: null
      - id: 374268
        key: 62fd635e-ab9f-436e-ada9-5873fe053dbf
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Mon Sep 11 2017 16:44:35 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/January/5888ff26_es6-compatibility-tables/es6-compatibility-tables.png'
        width: 1220
        height: 495
        alt: null
        caption: 对 ECMAScript 功能的浏览器支持兼容性表格。
        resources: null
        instructor_notes: null
      - id: 374270
        key: 783738d6-b662-47c5-b690-99f9a175bc63
        locale: zh-cn
        version: 1.0.0
        title: 兼容性表格测验
        semantic_type: RadioQuizAtom
        updated_at: 'Mon Sep 11 2017 16:44:35 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: |
            请阅读 ECMAScript 兼容性表格，第一个彩色列显示的信息是什么？
          correct_feedback: 第一列列出了所有的 ES6 功能。表格中的第二列是第一个彩色列，显示了当前浏览器对每项 ES6 功能的支持情况。
          video_feedback: null
          default_feedback: 请通过查看列标题得出答案。
          answers:
            - id: a1484685558934
              text: 最新支持 ES6 的浏览器列表。
              is_correct: false
              incorrect_feedback: null
            - id: a1484685640302
              text: 所有 ES6 功能的列表。
              is_correct: false
              incorrect_feedback: null
            - id: a1484685646746
              text: 你的当前浏览器支持的所有 ES6 功能的状态。
              is_correct: true
              incorrect_feedback: null
            - id: a1484685657822
              text: 每个浏览器平台对具体 ES6 功能的支持状况链接。
              is_correct: false
              incorrect_feedback: null
  - id: 374341
    key: e7375b57-6356-485b-bb74-d23498fd0a40
    locale: zh-cn
    version: 1.0.0
    title: 网络是永恒发展的
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:36 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374269
    atoms:
      - id: 374269
        key: f25bcf06-2bff-41aa-9893-e600e558f029
        locale: zh-cn
        version: 1.0.0
        title: 网络是永恒发展的
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:44:36 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '44132'
          youtube_id: LwdL-8jFCyQ
          subtitles:
            - url: 'https://s3.amazonaws.com/video.udacity-data.com/topher/2016/December/585cb21a_13-the-web-is-eternal/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/585cb21a_13-the-web-is-eternal/13-the-web-is-eternal_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/585cb21a_13-the-web-is-eternal/13-the-web-is-eternal_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/585cb21a_13-the-web-is-eternal/13-the-web-is-eternal_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/585cb21a_13-the-web-is-eternal/13-the-web-is-eternal_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/585cb21a_13-the-web-is-eternal/hls/playlist.m3u8'
  - id: 374345
    key: 13d0a1e8-f2ad-45a2-afa6-dedd1f5ccf98
    locale: zh-cn
    version: 1.0.0
    title: Polyfill
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:37 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374271
    atoms:
      - id: 374271
        key: 27c975ae-92f7-4b52-8e17-31cd5ef21db4
        locale: zh-cn
        version: 1.0.0
        title: Polyfill 简介
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:44:37 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '43226'
          youtube_id: eC2_Umstx9U
          subtitles:
            - url: 'https://s3.amazonaws.com/video.udacity-data.com/topher/2016/December/58422e37_14-polyfill-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/58422e37_14-polyfill-intro/14-polyfill-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/58422e37_14-polyfill-intro/14-polyfill-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/58422e37_14-polyfill-intro/14-polyfill-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/58422e37_14-polyfill-intro/14-polyfill-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/58422e37_14-polyfill-intro/hls/playlist.m3u8'
  - id: 374343
    key: a97c5af3-a227-4aba-9ea8-98fbecb5acf1
    locale: zh-cn
    version: 1.0.0
    title: 使用 Polyfill
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:38 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374272
      - 374273
    atoms:
      - id: 374272
        key: 112b9a5c-8b3a-46c7-82e0-27d3bd9eb5df
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:44:37 GMT+0000 (UTC)'
        is_public: true
        text: |-
          ## 什么是 polyfill？

          > polyfill（或 polyfiller）是一段代码（或插件），可以为你（即开发工程师）提供希望浏览器支持原生的技术。

          polyfill 一词由 [Remy Sharp](https://twitter.com/rem) 发明 - https://remysharp.com/2010/10/08/what-is-a-polyfill

          > 作为开发工程师，我们应该能够使用 HTML5 API 进行开发，能够使用脚本创建应该存在的方法和对象。这种能考虑到未来发展趋势的开发形式意味着当用户升级软件时，你的代码不用更改，用户能够迁移到更好的原生体验。
          来自 polyfill 的 HTML5 样板文件团队 - https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills

          ## 深入研究：

          https://en.wikipedia.org/wiki/Polyfill

          ## polyfill 示例

          以下代码是新的 ES6 String 方法 `startsWith()` 的 polyfill：

          ```js
          if (!String.prototype.startsWith) {
            String.prototype.startsWith = function (searchString, position) {
              position = position || 0;
              return this.substr(position, searchString.length) === searchString;
            };
          }
          ```

          可以看出，polyfill 只是普通的 JavaScript。

          这段代码是简单的 polyfill（请在 MDN 上了解它），而[此处](https://github.com/mathiasbynens/String.prototype.startsWith/blob/master/startswith.js)是更加复杂的 polyfill。
        instructor_notes: ''
        resources: null
      - id: 374273
        key: 3a06d71a-44a9-49f8-ace4-f71345d7fd6a
        locale: zh-cn
        version: 1.0.0
        title: Polyfill 测验
        semantic_type: RadioQuizAtom
        updated_at: 'Mon Sep 11 2017 16:44:37 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: |-
            `startsWith()` polyfill 为何以下面的这行开始：

            ```js
            if (!String.prototype.startsWith)
            ```
          correct_feedback: 注意，polyfill 用来弥补缺少的功能。如果浏览器支持 ES6 并且具有原生 `startsWith` 方法，那么就没必要再添加 polyfill 代码了。如果不存在此方法，则此 polyfill 将覆盖原生实现。
          video_feedback: null
          default_feedback: 正确答案是它会覆盖原生方法。
          answers:
            - id: a1484686110824
              text: 没有它的话，脚本将抛出错误。
              is_correct: false
              incorrect_feedback: null
            - id: a1484686131841
              text: 它会检查并确保存在 `String.prototype`。
              is_correct: false
              incorrect_feedback: null
            - id: a1484686132193
              text: 它会避免覆盖原生 `startsWith` 方法。
              is_correct: true
              incorrect_feedback: null
  - id: 374346
    key: b61048ac-5167-4fe1-93fe-642d652d0ef8
    locale: zh-cn
    version: 1.0.0
    title: Polyfill 步骤讲解
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:38 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374274
    atoms:
      - id: 374274
        key: f020d18a-de58-4d36-b246-98dc9248c94d
        locale: zh-cn
        version: 1.0.0
        title: Polyfill 步骤讲解
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:44:38 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '43148'
          youtube_id: vDmB-gT-U88
          subtitles:
            - url: 'https://s3.amazonaws.com/video.udacity-data.com/topher/2016/December/583f7cbc_18-walk-through-the-polyfill/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cbc_18-walk-through-the-polyfill/18-walk-through-the-polyfill_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cbc_18-walk-through-the-polyfill/18-walk-through-the-polyfill_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cbc_18-walk-through-the-polyfill/18-walk-through-the-polyfill_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cbc_18-walk-through-the-polyfill/18-walk-through-the-polyfill_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cbc_18-walk-through-the-polyfill/hls/playlist.m3u8'
  - id: 374344
    key: ba4d8f5e-5a98-4f1e-84bd-e460ff26a773
    locale: zh-cn
    version: 1.0.0
    title: Polyfill 的其他用途
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:39 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374275
    atoms:
      - id: 374275
        key: 3e051d84-3d76-4e35-ad6f-242adf7887e0
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:44:38 GMT+0000 (UTC)'
        is_public: true
        text: |
          ## Polyfills 不仅仅用来修补 JavaScript 功能

          JavaScript 是用来创建 polyfill 的语言，但是 polyfill 不仅仅用来填补缺失的 JavaScript 功能！有针对各种浏览器功能的 polyfill：

          * SVG
          * Canvas
          * 网络存储（本地存储/会话存储）
          * 视频
          * HTML5 元素
          * 无障碍功能
          * Web Sockets
          * 等等！

          要获得更完整的 polyfill 列表，请访问此[链接](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills)
        instructor_notes: ''
        resources: null
  - id: 374347
    key: b44f914d-d1f5-489e-b0bd-0c6119b25b29
    locale: zh-cn
    version: 1.0.0
    title: 转译
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:44:54 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374276
      - 374277
    atoms:
      - id: 374276
        key: f93aa2c4-8c91-4b68-917e-b0093f049442
        locale: zh-cn
        version: 1.0.0
        title: 转译简介
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:44:39 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '43149'
          youtube_id: Ku2NATTmgks
          subtitles:
            - url: 'https://s3.amazonaws.com/video.udacity-data.com/topher/2016/December/583f7cc5_21-transpiling/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc5_21-transpiling/21-transpiling_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc5_21-transpiling/21-transpiling_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc5_21-transpiling/21-transpiling_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc5_21-transpiling/21-transpiling_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc5_21-transpiling/hls/playlist.m3u8'
      - id: 374277
        key: 62ad0bc7-47c7-48cd-9497-ba16f02fe0ea
        locale: zh-cn
        version: 1.0.0
        title: 编译器或转译器
        semantic_type: RadioQuizAtom
        updated_at: 'Mon Sep 11 2017 16:44:39 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: 要将 Java 转换为 JavaScript，你是使用编译器还是转译器？
          correct_feedback: 因为 Java 源代码和 JavaScript 目标代码的抽象级别是相同的（人类都可以读懂），因此会使用转译器。
          video_feedback: null
          default_feedback: null
          answers:
            - id: a1484686317209
              text: 编译器
              is_correct: false
              incorrect_feedback: null
            - id: a1484686341106
              text: 转译器
              is_correct: true
              incorrect_feedback: null
  - id: 374348
    key: e2141a12-c59a-4d1f-ac39-20e5408d86ee
    locale: zh-cn
    version: 1.0.0
    title: 使用 Babel
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:45:06 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374278
      - 374279
      - 374280
      - 374281
      - 374282
      - 374283
      - 374284
    atoms:
      - id: 374278
        key: 3e5e0905-876d-45ee-a2e0-5ba3e4254138
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:45:01 GMT+0000 (UTC)'
        is_public: true
        text: |-
          最热门的 JavaScript 转译器是 [Babel](https://babeljs.io/)。

          Babel 的原始名称更具描述性——6to5。这是因为，一开始 Babel 专门将 ES6 代码转换为 ES5 代码，但是现在 Babel 具有更多功能了。它可以将 ES6 转换为 ES5、将 JSX 转换为 JavaScript，并将 Flow 转换为 JavaScript。

          在计算机上查看转译代码之前，我们快速做个测验，直接在 Babel 网站上将一些 ES6 代码转译为 ES5 代码。请参阅 [Babel 的 REPL](http://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015)，并将以下代码粘贴到左侧部分：

          ```js
          class Student {
            constructor (name, major) {
              this.name = name;
              this.major = major;
            }

            displayInfo() {
              console.log(`${this.name} is a ${this.major} student.`);
            }
          }

          const richard = new Student('Richard', 'Music');
          const james = new Student('James', 'Electrical Engineering');
          ```
        instructor_notes: ''
        resources: null
      - id: 374279
        key: 981da7bc-fc0b-4d62-87f8-d554a71e3267
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Mon Sep 11 2017 16:45:01 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/January/5888fc24_babel-es6-to-es5/babel-es6-to-es5.png'
        width: 1518
        height: 733
        alt: null
        caption: 左侧的 ES6 代码正在转译为右侧的 ES5 代码。
        resources: null
        instructor_notes: null
      - id: 374280
        key: 560475fe-6e82-4e9d-878d-d7792da9e3d5
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:45:02 GMT+0000 (UTC)'
        is_public: true
        text: |
          ## 资源库中的转译项目

          打开[此项目的资源库](https://github.com/udacity/course-es6/tree/master/lesson-4/walk-through-transpiling)，在第 4 节课目录下的是一个小的项目，已经设置好，可以从 ES6 代码转译为 ES5 代码。有一个"ES6”目录，其中包含我们将使用 Babel 转译为 ES5 代码的 ES6 代码，转译后的 ES5 代码将能够在所有浏览器上运行。
        instructor_notes: ''
        resources: null
      - id: 374281
        key: 74e76117-4e5f-4d67-b1ac-86edc3cdd52b
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Mon Sep 11 2017 16:45:05 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/January/5888fd20_es6-code-in-project/es6-code-in-project.png'
        width: 897
        height: 527
        alt: null
        caption: 包含将被转译的 ES6 代码的代码编辑器。
        resources: null
        instructor_notes: null
      - id: 374282
        key: e68d1ce5-0c37-45c6-8474-c1af83d95e08
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:45:05 GMT+0000 (UTC)'
        is_public: true
        text: |-
          Babel 将代码从一种语言转换为另一种语言的方式是使用插件。有一些插件可以将 ES6 箭头函数转换为普通的 ES5 函数（[ES2015 箭头函数插件](http://babeljs.io/docs/plugins/transform-es2015-arrow-functions/)）。有一些插件可以将 ES6 模板字面量转换为普通的字符串连结（[ES2015 模板字面量转换](http://babeljs.io/docs/plugins/transform-es2015-template-literals/)）。要获得完整的列表，请参阅[所有 Babel 插件](http://babeljs.io/docs/plugins/)。

          但是你比较繁忙，没有时间浏览长长的插件列表，看看需要哪些插件才能将 ES6 代码转换为 ES5。因此，Babel 提供了将插件绑定到一起的 **预设**，这样就不用使用大量的单个插件。我们不再担心需要安装哪些插件，而是直接使用 [ES2015 预设](http://babeljs.io/docs/plugins/preset-es2015/)，它包含了我们将 ES6 代码转换为 ES5 代码所需的所有插件。

          你会看到该项目具有一个 `.babelrc` 文件。你需要将项目要用到的所有插件和/或预设放在该文件里。因为我们要转换所有 ES6 代码，因此我们将其设置为具有 ES2015 预设。
        instructor_notes: ''
        resources: null
      - id: 374283
        key: 5bac53bb-9df4-428e-b0a1-43e9a173381f
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Mon Sep 11 2017 16:45:05 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/January/5888fdb4_es6-preset-in-project/es6-preset-in-project.png'
        width: 897
        height: 527
        alt: null
        caption: 列出 ES2015 预设的 `.babelrc` 文件代码编辑器。
        resources: null
        instructor_notes: null
      - id: 374284
        key: 1a47eb6a-0a2c-4e19-a234-4a23a230faec
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:45:06 GMT+0000 (UTC)'
        is_public: true
        text: |-
          > **警告：**Babel 同时使用 [Node](https://nodejs.org/) 和 [NPM](https://www.npmjs.com/) 来分发它的插件。在安装任何插件之前，请先安装这两个工具 ：
          * 安装 [Node](https://nodejs.org/)（会自动安装 NPM）
        instructor_notes: ''
        resources: null
  - id: 374349
    key: b91e41ba-c30a-4772-868a-e57dd96e0684
    locale: zh-cn
    version: 1.0.0
    title: 转译步骤讲解
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:45:06 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374285
    atoms:
      - id: 374285
        key: 5170f82c-8af6-40ba-9934-e31e64b64042
        locale: zh-cn
        version: 1.0.0
        title: 转译步骤讲解
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:45:06 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '43150'
          youtube_id: QGE5Emfg1hI
          subtitles:
            - url: 'https://s3.amazonaws.com/video.udacity-data.com/topher/2016/December/583f7cc6_31-walk-through-transpiling-project/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc6_31-walk-through-transpiling-project/31-walk-through-transpiling-project_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc6_31-walk-through-transpiling-project/31-walk-through-transpiling-project_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc6_31-walk-through-transpiling-project/31-walk-through-transpiling-project_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc6_31-walk-through-transpiling-project/31-walk-through-transpiling-project_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7cc6_31-walk-through-transpiling-project/hls/playlist.m3u8'
  - id: 374351
    key: d31889ae-7903-487d-994a-9f113feb8525
    locale: zh-cn
    version: 1.0.0
    title: 转译小结
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:45:08 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374286
      - 374287
      - 374288
    atoms:
      - id: 374286
        key: 15736fac-6071-4b84-b0bb-8ee6c37d36c2
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:45:07 GMT+0000 (UTC)'
        is_public: true
        text: '> **注意**：在制作本课程时（大约为 2016 年冬），当前的浏览器版本支持大多数的 ES6。但只是大多数功能，并非全部功能。并且指的是当前浏览器。有大量的旧浏览器不支持很多 ES6 新增功能。但是可以肯定的是，几乎每个浏览器都支持该语言的上一个版本 (ES5.1)。'
        instructor_notes: ''
        resources: null
      - id: 374287
        key: 69dd72fd-01e3-42c2-9587-bd70fb0ac135
        locale: zh-cn
        version: 1.0.0
        title: 将 ES6 转译为 ES5
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:45:07 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: '<div style="text-align: center; color: #afafaf; font-size: 14px; margin-top: 15px;">将 ES6 代码转译为 ES5 代码。</div>'
        resources: null
        video:
          id: '48648'
          youtube_id: ihtUq_Ve0fk
          subtitles: null
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/January/588903ca_transpiling-es6-to-es5-animation-new/transpiling-es6-to-es5-animation-new_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/January/588903ca_transpiling-es6-to-es5-animation-new/transpiling-es6-to-es5-animation-new_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/January/588903ca_transpiling-es6-to-es5-animation-new/transpiling-es6-to-es5-animation-new_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/January/588903ca_transpiling-es6-to-es5-animation-new/transpiling-es6-to-es5-animation-new_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/January/588903ca_transpiling-es6-to-es5-animation-new/hls/playlist.m3u8'
      - id: 374288
        key: 57671a32-3047-4d8c-b36c-08c14e295a39
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Sep 11 2017 16:45:07 GMT+0000 (UTC)'
        is_public: true
        text: |-
          ## 转译小结

          及时掌握 JavaScript 的所有变化很重要。最佳方式是开始使用新增的功能。问题是并非所有浏览器都支持这些新功能。鱼与熊掌不可兼得，你可以用 ES6 编写代码，然后使用转译器将其转译为 ES5 代码。这样可以将项目代码库转换为最新版本的语言，同时能够到处运行。当你的代码需要运行在上面的所有浏览器都完全支持 ES6 代码后，你就不用再转译你的代码，直接提供 ES6 代码即可！
        instructor_notes: ''
        resources: null
  - id: 374350
    key: a6b9bd3d-e712-4535-82f2-039fbcf7b59c
    locale: zh-cn
    version: 1.0.0
    title: 课程总结
    semantic_type: Concept
    updated_at: 'Mon Sep 11 2017 16:45:09 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 374289
    atoms:
      - id: 374289
        key: 796472f7-385d-468b-9208-f92d16ca7fa1
        locale: zh-cn
        version: 1.0.0
        title: 课程总结
        semantic_type: VideoAtom
        updated_at: 'Mon Sep 11 2017 16:45:09 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '43151'
          youtube_id: hXddrbk5LF8
          subtitles:
            - url: 'https://s3.amazonaws.com/video.udacity-data.com/topher/2016/December/583f7ccd_34-course-outro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7ccd_34-course-outro/34-course-outro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7ccd_34-course-outro/34-course-outro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7ccd_34-course-outro/34-course-outro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7ccd_34-course-outro/34-course-outro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2016/December/583f7ccd_34-course-outro/hls/playlist.m3u8'
